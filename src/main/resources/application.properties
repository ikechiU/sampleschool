spring.datasource.username=school
spring.datasource.password=school
spring.datasource.url=jdbc:postgresql://localhost:5432/school_db

#H2 Database
#spring.datasource.url= jdbc:h2:mem:testdb
#spring.h2.console.enabled=true
#spring.h2.console.settings.web-allow-others=true
#spring.h2.console.path=/h2-console

spring.jpa.show-sql=true
## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

#Extracted string from student and teacher controller
studentController.authorizationHeader.description = Bearer JWT Token
studentController.GetStudent.ApiOperation.Notes = This WebService endpoint returns StudentRest. An authorization header is needed to get response. Login with test email and password to get authorization header or create a student account (StudentRequest) confirm it and login with it to get your authorization header.

studentController.DeleteStudent.ApiOperation.Notes = This WebService endpoint returns the status of the operation and result. An authorization header is needed to get response.
studentController.General.ApiOperation.Notes = This WebService endpoint returns the status of the operation and result. An authorization header is needed to get response.  Use test login authorization header to perform this operation..
studentController.GeneralOne.ApiOperation.Notes = This WebService endpoint returns the status of the operation and result. An authorization header is needed to get response.  Use test login authorization header to perform this operation or your created student login details to perform this operation..
teacherController.DeleteStudent.ApiOperation.Notes = This WebService endpoint returns the status of the operation and result. An authorization header is needed to get response.

teacherController.authorizationHeader.description = Bearer JWT Token
teacherController.GetTeacher.ApiOperation.Notes = This WebService endpoint returns TeacherRest. An authorization header is needed to get response. Login with test email and password to get authorization header.

spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
server.servlet.context-path=/
tokenSecret = jf9i4qgu8mfl0
server.error.include-message = always

#log sql queries and their values in console
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
spring.jpa.properties.hibernate.format_sql=tru
